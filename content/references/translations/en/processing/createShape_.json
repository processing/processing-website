{
  "brief": "The <b>createShape()</b> function is used to define a new shape",
  "related": ["PShape", "endShape_", "loadShape_"],
  "name": "createShape()",
  "description": "The <b>createShape()</b> function is used to define a new shape.\n Once created, this shape can be drawn with the <b>shape()</b>\n function. The basic way to use the function defines new primitive\n shapes. One of the following parameters are used as the first\n parameter: <b>ELLIPSE</b>, <b>RECT</b>, <b>ARC</b>, <b>TRIANGLE</b>,\n <b>SPHERE</b>, <b>BOX</b>, <b>QUAD</b>, or <b>LINE</b>. The\n parameters for each of these different shapes are the same as their\n corresponding functions: <b>ellipse()</b>, <b>rect()</b>, <b>arc()</b>,\n <b>triangle()</b>, <b>sphere()</b>, <b>box()</b>, <b>quad()</b>, and\n <b>line()</b>. The first example above clarifies how this works.<br/>\n <br/>\n Custom, unique shapes can be made by using <b>createShape()</b> without\n a parameter. After the shape is started, the drawing attributes and\n geometry can be set directly to the shape within the <b>beginShape()</b>\n and <b>endShape()</b> methods. See the second example above for specifics,\n and the reference for <b>beginShape()</b> for all of its options.<br/>\n <br/>\n The  <b>createShape()</b> function can also be used to make a complex\n shape made of other shapes. This is called a \"group\" and it's created by\n using the parameter <b>GROUP</b> as the first parameter. See the fourth\n example above to see how it works.<br/>\n <br/>\n After using <b>createShape()</b>, stroke and fill color can be set by\n calling methods like <b>setFill()</b> and <b>setStroke()</b>, as seen\n in the examples above. The complete list of methods and fields for the\n PShape class are in the <a href=\"http://processing.github.io/processing-javadocs/core/\">Processing Javadoc</a>.",
  "syntax": ["createShape()", "createShape(type)", "createShape(kind, p)"],
  "returns": "PShape",
  "type": "function",
  "category": "shape",
  "subcategory": "",
  "parameters": [
    {
      "name": "kind",
      "description": "either POINT, LINE, TRIANGLE, QUAD, RECT, ELLIPSE, ARC, BOX, SPHERE",
      "type": ["int"]
    },
    {
      "name": "p",
      "description": "parameters that match the kind of shape",
      "type": ["float[]"]
    }
  ]
}
