{
  "brief": "Takes a <b>String</b>, parses its contents, and returns a <b>JSONArray</b>",
  "related": ["JSONObject", "loadJSONObject_", "saveJSONObject_"],
  "name": "parseJSONArray()",
  "description": "Takes a <b>String</b>, parses its contents, and returns a <b>JSONArray</b>.\n If the <b>String</b> does not contain <b>JSONArray</b> data or cannot be\n parsed, a <b>null</b> value is returned.<br/>\n <br/>\n <b>parseJSONArray()</b> is most useful when pulling data dynamically, such as\n from third-party APIs. Normally, API results would be saved to a\n <b>String</b>, and then can be converted to a structured <b>JSONArray</b>\n using <b>parseJSONArray()</b>. Be sure to check if <b>null</b> is returned\n before performing operations on the new <b>JSONArray</b> in case the\n <b>String</b> content could not be parsed.<br/>\n <br/>\n If your data already exists as a <b>JSON</b> file in the data folder, it is\n simpler to use <b>loadJSONArray()</b>.",
  "syntax": ["parseJSONArray(input)"],
  "returns": "JSONArray",
  "type": "function",
  "category": "input",
  "subcategory": "files",
  "parameters": [
    {
      "name": "input",
      "description": "String to parse as a JSONArray",
      "type": ["String"]
    }
  ]
}
