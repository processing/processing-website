{
  "brief": "Sets a variable within the shader",
  "related": [],
  "name": "set()",
  "description": "Sets the uniform variables inside the shader to modify the effect while the\n program is running.",
  "syntax": [
    ".set(name, x)",
    ".set(name, x, y)",
    ".set(name, x, y, z)",
    ".set(name, x, y, z, w)",
    ".set(name, vec)",
    ".set(name, vec, ncoords)",
    ".set(name, boolvec, ncoords)",
    ".set(name, mat)",
    ".set(name, mat, use3x3)",
    ".set(name, tex)"
  ],
  "returns": "void",
  "type": "method",
  "category": "rendering",
  "subcategory": "shaders",
  "classanchor": "PShader",
  "parameters": [
    {
      "name": "name",
      "description": "the name of the uniform variable to modify",
      "type": ["String"]
    },
    {
      "name": "x",
      "description": "first component of the variable to modify",
      "type": ["int", "float", "boolean"]
    },
    {
      "name": "y",
      "description": "second component of the variable to modify. The variable has to be declared with an array/vector type in the shader (i.e.: int[2], vec2)",
      "type": ["int", "float", "boolean"]
    },
    {
      "name": "z",
      "description": "third component of the variable to modify. The variable has to be declared with an array/vector type in the shader (i.e.: int[3], vec3)",
      "type": ["int", "float", "boolean"]
    },
    {
      "name": "w",
      "description": "fourth component of the variable to modify. The variable has to be declared with an array/vector type in the shader (i.e.: int[4], vec4)",
      "type": ["int", "float", "boolean"]
    },
    {
      "name": "vec",
      "description": "modifies all the components of an array/vector uniform variable. PVector can only be used if the type of the variable is vec3.",
      "type": ["PVector", "int[]", "float[]", "boolean[]"]
    },
    {
      "name": "ncoords",
      "description": "number of coordinates per element, max 4",
      "type": ["int"]
    },
    {
      "name": "mat",
      "description": "matrix of values",
      "type": ["PMatrix2D", "PMatrix3D"]
    },
    {
      "name": "use3x3",
      "description": "enforces the matrix is 3 x 3",
      "type": ["boolean"]
    },
    {
      "name": "tex",
      "description": "sets the sampler uniform variable to read from this image texture",
      "type": ["PImage"]
    }
  ]
}
