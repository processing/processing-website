{
  "brief": "This class encapsulates a GLSL shader program,\n           including a vertex and a fragment shader",
  "methods": [
    {
      "anchor": "PShader_set_",
      "name": "set()",
      "desc": "Sets a variable within the shader"
    }
  ],
  "csspath": "../../",
  "isLibrary": "true",
  "classFields": [],
  "description": "This class encapsulates a GLSL shader program, including a vertex\n and a fragment shader. It is compatible with P2D and P3D, but not\n with the default renderer.\n\n Use the <b>loadShader()</b> function to load your shader code.\n Note: It's strongly encouraged to use <b>loadShader()</b> to create\n a <b>PShader</b> object, rather than calling the <b>PShader</b>\n constructor manually.",
  "type": "class",
  "constructors": [
    "PShader()",
    "PShader(parent)",
    "PShader(parent, vertFilename, fragFilename)",
    "PShader(parent, vertURL, fragURL)",
    "PShader(parent, vertSource, fragSource)"
  ],
  "related": [],
  "name": "PShader",
  "classanchor": "PShader",
  "category": "rendering",
  "subcategory": "shaders",
  "parameters": [
    {
      "name": "parent",
      "description": "the parent program",
      "type": ["PApplet"]
    },
    {
      "name": "vertFilename",
      "description": "name of the vertex shader",
      "type": ["String"]
    },
    {
      "name": "fragFilename",
      "description": "name of the fragment shader",
      "type": ["String"]
    },
    {
      "name": "vertURL",
      "description": "network location of the vertex shader",
      "type": ["URL"]
    },
    {
      "name": "fragURL",
      "description": "network location of the fragment shader",
      "type": ["URL"]
    }
  ]
}
