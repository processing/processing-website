{
  "brief": "Main graphics and rendering context, as well as the base API\n           implementation for processing \"core\"",
  "constructors": ["PGraphics()"],
  "related": ["createGraphics_"],
  "methods": [
    {
      "anchor": "PGraphics_beginDraw_",
      "name": "beginDraw()",
      "desc": "Sets the default properties for a <b>PGraphics</b> object"
    },
    {
      "anchor": "PGraphics_endDraw_",
      "name": "endDraw()",
      "desc": "Finalizes the rendering of a <b>PGraphics</b> object so that it can be shown on screen"
    }
  ],
  "name": "PGraphics",
  "classFields": [],
  "description": "Main graphics and rendering context, as well as the base API implementation\n for processing \"core\". Use this class if you need to draw into an off-screen\n graphics buffer. A PGraphics object can be constructed with the\n <b>createGraphics()</b> function. The <b>beginDraw()</b> and <b>endDraw()</b>\n methods (see above example) are necessary to set up the buffer and to\n finalize it. The fields and methods for this class are extensive. For a\n complete list, visit the\n <a href=\"http://processing.github.io/processing-javadocs/core/\">developer's\n reference.</a><br/>\n <br/>\n To create a new graphics context, use the <b>createGraphics()</b> function.\n Do not use the syntax <b>new PGraphics()</b>.\n\n ",
  "type": "class",
  "classanchor": "PGraphics",
  "category": "rendering",
  "subcategory": "",
  "parameters": []
}
