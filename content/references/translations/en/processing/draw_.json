{
  "brief": "Called directly after <b>setup()</b> and continuously executes the lines\n of code contained inside its block until the program is stopped or\n <b>noLoop()</b> is called",
  "related": [
    "setup_",
    "loop_",
    "noLoop_",
    "redraw_",
    "frameRate_",
    "background_"
  ],
  "name": "draw()",
  "description": "Called directly after <b>setup()</b>, the <b>draw()</b> function continuously\n executes the lines of code contained inside its block until the program is\n stopped or <b>noLoop()</b> is called. <b>draw()</b> is called automatically\n and should never be called explicitly. All Processing programs update the\n screen at the end of draw(), never earlier.<br/>\n <br/>\n To stop the code inside of <b>draw()</b> from running continuously, use\n <b>noLoop()</b>, <b>redraw()</b> and <b>loop()</b>. If <b>noLoop()</b> is\n used to stop the code in <b>draw()</b> from running, then <b>redraw()</b>\n will cause the code inside <b>draw()</b> to run a single time, and\n <b>loop()</b> will cause the code inside <b>draw()</b> to resume running\n continuously.<br/>\n <br/>\n The number of times <b>draw()</b> executes in each second may be controlled\n with the <b>frameRate()</b> function.<br/>\n <br/>\n It is common to call <b>background()</b> near the beginning of the\n <b>draw()</b> loop to clear the contents of the window, as shown in the first\n example above.  Since pixels drawn to the window are cumulative, omitting\n <b>background()</b> may result in unintended results.<br/>\n <br/>\n There can only be one <b>draw()</b> function for each sketch, and <b>draw()</b>\n must exist if you want the code to run continuously, or to process events such\n as <b>mousePressed()</b>. Sometimes, you might have an empty call to\n <b>draw()</b> in your program, as shown in the second example above.",
  "syntax": ["draw()"],
  "returns": "void",
  "type": "function",
  "category": "structure",
  "subcategory": "",
  "parameters": []
}
